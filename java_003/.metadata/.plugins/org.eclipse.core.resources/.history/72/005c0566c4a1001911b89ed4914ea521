package matrixchoice;

/* Author: Brian Cedillo
Date: July 2019
Description: Assignment 6: Labeling Pair of Dices (Matrix)

Objective:
	1) print on screen only
	2) print on file
	3) print on both
*/

import java.util.*;

import javax.swing.JOptionPane;

import java.io.FileWriter;
import java.io.*;
public class PrintOption {
	public static void main(String[] args) throws Exception {
		Scanner input = new Scanner(System.in);
		File fileName = new File("test.txt");
		
		String [][] labels = {{"Snake Eyes", "Australian yo", "Little Joe From Kokomo", "No Field Five", "Easy six", "Six one you're done"}, 
							   {"Ace caught a deuce" , "Ballerina", "The fever", "Jimmie Hicks", "Benny Blue", "Easy eight"},
							   {"Easy four", "OJ", "Brooklyn Forest", "Big Red", "Eighter From Decatur", "Nina from Pasadena"},
							   {"Little Phoebe", "Easy Six", "Skinny McKinney", "Square pair", "Railroad nine", "Big one on the end"},
							   {"Sixie from Dixie", "Skinny Dugan", "Easy Eight", "Jesse James", "Puppy paws", "Yo"},
							   {"The Devil", "Easy Eight", "Lou Brown", "Tennessee", "Six five no jove", "Midnight"}};
	    //top
		String [] colDie = {"Die 1","Die 2","Die 3","Die 4","Die 5","Die 6"};
		//left side
		String [] rownum = {"Die 1","Die 2","Die 3","Die 4","Die 5","Die 6"};
		//place top 
		
		System.out.println("How would you like to print the matrix?\n" +
						   "Press the number that corresponds to your option:\n\n" +
						   "1) print on screen only\n" + 
						   "2) print on file\n" + 
						   "3) print on both");
		int option  = input.nextInt();
	//printing on SCREEN ONLY
		if(option == 1){
			for (int row = 0; row < rownum.length; row++) {
				System.out.print(String.format("%23s",colDie[row]));
				}
				System.out.println();
				System.out.println();
				//place rows
				for (int row = 0; row < rownum.length; row++) {
		            System.out.print(String.format("%-17s ",rownum[row]));
		            //place label array
		            	for (int col = 0; col < labels[row].length; col++) {
		            		System.out.print(String.format("%-22s ",labels[row][col]));
		            	}
		            //double spacing or they're too close
		            System.out.println("\n");
				}
			System.exit(0);
		}
	//Print on TXT FILE ONLY	
		else if(option == 2) {
			try {
				FileWriter fw = new FileWriter(fileName);
				Writer output = new BufferedWriter(fw);
				int sz = rownum.length;
				
				for (int row = 0; row < rownum.length; row++) {
					System.out.print(String.format("%23s",colDie[row]));
					}
					System.out.println();
					System.out.println();
					//place rows
					for (int row = 0; row < rownum.length; row++) {
			            System.out.print(String.format("%-17s ",rownum[row]));
			            //place label array
			            	for (int col = 0; col < labels[row].length; col++) {
			            		System.out.print(String.format("%-22s ",labels[row][col]));
			            	}
			            //double spacing or they're too close
			            System.out.println("\n");
					}
					output.close();
				} catch(Exception e) {
					JOptionPane.showMessageDialog(null, "I cannot create that file.");
					}
		}
	//Print on SCREEN AND TXT FILE	
		else if(option == 3) {
			
			for (int row = 0; row < rownum.length; row++) {
				System.out.print(String.format("%23s",colDie[row]));
				}
				System.out.println();
				System.out.println();
				//place rows
				for (int row = 0; row < rownum.length; row++) {
		            System.out.print(String.format("%-17s ",rownum[row]));
		            //place label array
		            	for (int col = 0; col < labels[row].length; col++) {
		            		System.out.print(String.format("%-22s ",labels[row][col]));
		            	}
		            //double spacing or they're too close
		            System.out.println("\n");
				}
			System.exit(0);
		}
			
			
	}
	
	void writeMatrix(String filename, int[][] matrix) {
	    try {
	        BufferedWriter bw = new BufferedWriter(new FileWriter(filename));

	        for (int i = 0; i < matrix.length; i++) {
	            for (int j = 0; j < matrix[i].length; j++) {
	                if(j == matrix[i].length - 1){    
	                    bw.write(matrix[i][j]);
	                } else{
	                    bw.write(matrix[i][j] + ",");
	                }        
	            }
	            bw.newLine();
	        }
	        bw.flush();
	    } catch (IOException e) {
	        //why does the catch need its own curly?
	    }
	}
}
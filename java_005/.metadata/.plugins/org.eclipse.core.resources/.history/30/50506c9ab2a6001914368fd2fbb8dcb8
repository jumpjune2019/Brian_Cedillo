package trafficlight;

import java.awt.event.KeyEvent;
import java.io.IOException;

class ThreadControl implements Runnable {
    // Create our fields
    Thread lite;
    boolean suspended;
    boolean stopped;
    ThreadControl(String name) {
        lite = new Thread(this, name);
        suspended = false;
        stopped = false;
        lite.start();
    }
    ThreadControl t1 = null;
    ThreadControl t2 = null;
    ThreadControl t3 = null;
    
    Lights col = Lights.GREEN;
    public void run() {
        System.out.println("Traffic Light Simulator is a Go!");
		while(!stopped) {
			t1 = new ThreadControl(col.getString());
			try {
				t1.lite.join();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			//System.out.println("Light is Green - Go!");
		    //Thread.sleep(Lights.GREEN.getTime());
			t2 = new ThreadControl(col.getString());
			//System.out.println("Light is Yellow - Beware!");
		    //Thread.sleep(Lights.YELLOW.getTime());
			t3 = new ThreadControl(col.getString());
		    //System.out.println("Light is Red - Stop!");
		    //Thread.sleep(Lights.RED.getTime());
		}
    }
    synchronized void myStop() {
        stopped = true;
        suspended = false;
        notifyAll();
    }
    synchronized void mySuspend() {
        suspended = true;
    }
    synchronized void myResume() {
        suspended = false;
        notify();
    }
    
    synchronized boolean isAlive() {
    	return lite.isAlive();
    
    }
}